name: Terraform CI

on:
  pull_request:
    branches: [ main ]

jobs:
  init-and-validate-terraform:
    name: 'Initialize and validate terraform providers and modules'
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -backend-config="resource_group_name=${{ secrets.TF_BACKEND_CONFIG_RG_NAME }}" -backend-config="storage_account_name=${{ secrets.TF_BACKEND_CONFIG_SA_NAME }}" -backend-config="container_name=${{ secrets.TF_BACKEND_CONFIG_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TF_BACKEND_CONFIG_FILE_KEY }}"

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Format
      run: terraform fmt -check -diff

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v1.1.0
      with:
        tflint_version: latest
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Show TFLint version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
    
    - name: Run TFLint
      run: tflint --var-file=./environments/dev/dev.tfvars -f compact

  terraform-security-analysis:
    needs: init-and-validate-terraform
    name: 'Run security analysis for terraform'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup TFSec
      uses: tfsec/tfsec-sarif-action@master
      with:
        sarif_file: tfsec.sarif
        tfvars_file: ./environments/dev/dev.tfvars
    
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: tfsec.sarif

  infracost-report:
    needs: [terraform-security-analysis]
    name: 'Generate infra cost report'
    runs-on: ubuntu-latest

    env:
      INFRACOST_CURRENCY: BRL
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init -backend-config="resource_group_name=${{ secrets.TF_BACKEND_CONFIG_RG_NAME }}" -backend-config="storage_account_name=${{ secrets.TF_BACKEND_CONFIG_SA_NAME }}" -backend-config="container_name=${{ secrets.TF_BACKEND_CONFIG_CONTAINER_NAME }}" -backend-config="key=${{ secrets.TF_BACKEND_CONFIG_FILE_KEY }}"

    - name: Terraform plan
      run: terraform plan -var-file=./environments/dev/dev.tfvars -out tfplan.binary

    - name: Terraform show
      run: terraform show -json tfplan.binary > plan.json

    - name: Setup Infracost
      uses: infracost/actions/setup@v1
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}
    
    - name: Infracost Report
      run: infracost breakdown --usage-file ./infracost-usage.yml --path plan.json --format json --out-file /tmp/infracost.json
    
    - name: Post Infracost comment
      uses: infracost/actions/comment@v1
      with:
        path: /tmp/infracost.json
        behavior: update